{
  "_from": "tail",
  "_id": "tail@2.0.2",
  "_inBundle": false,
  "_integrity": "sha512-raFipiKWdGKEzxbvZwnhUGqjvsv0gpa/1A479rL//NOxnNwYZDN4MPk6xJJdUFs8P2Xrff3nbH5fcyYRLU4UHQ==",
  "_location": "/tail",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "tail",
    "fetchSpec": "latest",
    "name": "tail",
    "raw": "tail",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/tail/-/tail-2.0.2.tgz",
  "_shasum": "86073f3a9a568807b7fd886897a7350314275b5f",
  "_shrinkwrap": null,
  "_spec": "tail",
  "_where": "/home/alex/Desktop/Projects/nodetail",
  "author": {
    "name": "Luca Grulla",
    "url": "https://www.lucagrulla.com"
  },
  "bugs": {
    "url": "https://github.com/lucagrulla/node-tail/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Luca Grulla"
    },
    {
      "name": "Tom Hall"
    }
  ],
  "dependencies": {},
  "deprecated": false,
  "description": "tail a file in node",
  "devDependencies": {
    "chai": "3.x",
    "coffeescript": "2.3.1",
    "mocha": "5.x"
  },
  "engines": {
    "node": ">= 6.0.0"
  },
  "homepage": "https://www.lucagrulla.com/node-tail",
  "keywords": [
    "file",
    "logs",
    "tail"
  ],
  "license": "MIT",
  "main": "lib/tail",
  "name": "tail",
  "optionalDependencies": {},
  "readme": "# Tail\n\nThe **zero** dependency Node.js module for tailing a file\n\n[![NPM](https://nodei.co/npm/tail.png?downloads=true&downloadRank=true)](https://nodei.co/npm/tail.png?downloads=true&downloadRank=true)\n\n[![license](https://img.shields.io/github/license/mashape/apistatus.svg)](https://github.com/lucagrulla/node-tail/blob/master/LICENSE)\n[![npm](https://img.shields.io/npm/v/tail.svg?style=plastic)](https://www.npmjs.com/package/tail)\n![npm](https://img.shields.io/npm/dm/tail.svg)\n\nAuthor: [Luca Grulla](https://www.lucagrulla.com) - [www.lucagrulla.com](https://www.lucagrulla.com)\n\n## Installation\n\n```bash\nnpm install tail\n```\n\n## Use\n\n```javascript\nTail = require('tail').Tail;\n\ntail = new Tail(\"fileToTail\");\n\ntail.on(\"line\", function(data) {\n  console.log(data);\n});\n\ntail.on(\"error\", function(error) {\n  console.log('ERROR: ', error);\n});\n```\n\nIf you want to stop tail:\n\n```javascript\ntail.unwatch()\n```\n\nTo start watching again:\n\n```javascript\ntail.watch()\n```\n\n## Configuration\n\nThe only mandatory parameter is the path to the file to tail.\n\n```javascript\nvar fileToTail = \"/path/to/fileToTail.txt\";\nnew Tail(fileToTail)\n```\n\nOptional parameters can be passed via a hash:\n\n```javascript\nvar options= {separator: /[\\r]{0,1}\\n/, fromBeginning: false, fsWatchOptions: {}, follow: true, logger: console}\nnew Tail(fileToTail, options)\n```\n\n### Constructor parameters\n\n* `separator`:  the line separator token (default: `/[\\r]{0,1}\\n/` to handle linux/mac (9+)/windows). Pass null if your file is binary there's no line separator.\n* `fsWatchOptions`: the full set of options that can be passed to `fs.watch` as per node documentation (default: {}).\n* `fromBeginning`: forces the tail of the file from the very beginning of it instead of from the first new line that will be appended (default: `false`).\n* `follow`: simulate `tail -F` option. In the case the file is moved/renamed (or logrotated), if set to `true` `tail` will try to start tailing again after a 1 second delay, if set to `false` it will just emit an error event (default: `true`).\n* `logger`: a logger object(default: no logger). The passed logger has to respond to two methods:\n  * `info([data][, ...])`\n  * `error([data][, ...])`\n* `useWatchFile`: if set to `true` will force the use of `fs.watchFile` rather than delegating to the library the choice between `fs.watch` and `fs.watchFile` (default: `false`).\n* `encoding`: the encoding of the file to tail (default:`utf-8`).\n* `flushAtEOF`: set to `true` if you want to force flush of content when end of file is reached. Particularly useful when there's no separator character at the end of the file (default: `false`).\n\n## Emitted events\n\n`Tail` emits two events:\n\n* line\n\n```javascript\nfunction(data){\n  console.log(data)\n}\n```\n\n* error\n\n```javascript\nfunction(exception){\n  console.error(exception);\n}\n```\n\n## How to contribute\n\nTail is written in [CoffeeScript](http://jashkenas.github.com/coffee-script/).\n\nThe Cakefile generates the javascript that is then published to npm.\n\n## History\n\nTail was born as part of a data firehose. Read about it [here](https://www.lucagrulla.com/posts/building-a-firehose-with-nodejs/).\n\n## License\n\nMIT. Please see [License](https://github.com/lucagrulla/node-tail/blob/master/LICENSE) file for more details.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/lucagrulla/node-tail.git"
  },
  "scripts": {
    "build": "cake build",
    "prepare": "npm run build",
    "prepublishOnly": "npm run test",
    "test": "mocha"
  },
  "version": "2.0.2"
}
